// Code generated by protoc-gen-go. DO NOT EDIT.
// source: queuesmetrics.proto

package queuesmetrics

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Query struct {
	Queues               string   `protobuf:"bytes,1,opt,name=queues,proto3" json:"queues,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2b1d7093d065eb1, []int{0}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetQueues() string {
	if m != nil {
		return m.Queues
	}
	return ""
}

type Metrics struct {
	Metric               []*Metric `protobuf:"bytes,1,rep,name=Metric,proto3" json:"Metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2b1d7093d065eb1, []int{1}
}

func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (m *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(m, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetMetric() []*Metric {
	if m != nil {
		return m.Metric
	}
	return nil
}

type Metric struct {
	Queue                string   `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Jobs                 int64    `protobuf:"varint,2,opt,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2b1d7093d065eb1, []int{2}
}

func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (m *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(m, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

func (m *Metric) GetJobs() int64 {
	if m != nil {
		return m.Jobs
	}
	return 0
}

func init() {
	proto.RegisterType((*Query)(nil), "Query")
	proto.RegisterType((*Metrics)(nil), "Metrics")
	proto.RegisterType((*Metric)(nil), "Metric")
}

func init() { proto.RegisterFile("queuesmetrics.proto", fileDescriptor_c2b1d7093d065eb1) }

var fileDescriptor_c2b1d7093d065eb1 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x2c, 0x4d, 0x2d,
	0x4d, 0x2d, 0xce, 0x4d, 0x2d, 0x29, 0xca, 0x4c, 0x2e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57,
	0x92, 0xe7, 0x62, 0x0d, 0x2c, 0x4d, 0x2d, 0xaa, 0x14, 0x12, 0xe3, 0x62, 0x83, 0xc8, 0x4b, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41, 0x79, 0x4a, 0x5a, 0x5c, 0xec, 0xbe, 0x10, 0x1d, 0x42, 0xf2,
	0x5c, 0x6c, 0x10, 0xa6, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x11, 0xbb, 0x1e, 0x84, 0x1b, 0x04,
	0x15, 0x56, 0x32, 0x82, 0x29, 0x10, 0x12, 0xe1, 0x62, 0x05, 0xeb, 0x87, 0x1a, 0x06, 0xe1, 0x08,
	0x09, 0x71, 0xb1, 0x64, 0xe5, 0x27, 0x15, 0x4b, 0x30, 0x29, 0x30, 0x6a, 0x30, 0x07, 0x81, 0xd9,
	0x46, 0x5a, 0x5c, 0xbc, 0x81, 0x60, 0x9b, 0x60, 0xb6, 0x48, 0x72, 0x31, 0xbb, 0xa7, 0x96, 0x08,
	0xb1, 0xe9, 0x81, 0xdd, 0x25, 0xc5, 0x01, 0xb5, 0xa4, 0x58, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x66,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x30, 0xa5, 0x1a, 0xca, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueuesMetricsClient is the client API for QueuesMetrics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueuesMetricsClient interface {
	Get(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Metrics, error)
}

type queuesMetricsClient struct {
	cc *grpc.ClientConn
}

func NewQueuesMetricsClient(cc *grpc.ClientConn) QueuesMetricsClient {
	return &queuesMetricsClient{cc}
}

func (c *queuesMetricsClient) Get(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Metrics, error) {
	out := new(Metrics)
	err := c.cc.Invoke(ctx, "/QueuesMetrics/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueuesMetricsServer is the server API for QueuesMetrics service.
type QueuesMetricsServer interface {
	Get(context.Context, *Query) (*Metrics, error)
}

// UnimplementedQueuesMetricsServer can be embedded to have forward compatible implementations.
type UnimplementedQueuesMetricsServer struct {
}

func (*UnimplementedQueuesMetricsServer) Get(ctx context.Context, req *Query) (*Metrics, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterQueuesMetricsServer(s *grpc.Server, srv QueuesMetricsServer) {
	s.RegisterService(&_QueuesMetrics_serviceDesc, srv)
}

func _QueuesMetrics_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueuesMetricsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QueuesMetrics/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueuesMetricsServer).Get(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

var _QueuesMetrics_serviceDesc = grpc.ServiceDesc{
	ServiceName: "QueuesMetrics",
	HandlerType: (*QueuesMetricsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _QueuesMetrics_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "queuesmetrics.proto",
}
